[section Introduction]

[*Note:] This documentation is based on the original article ([link 1 \[1\]]) published in the C/C++ Users Journal (now Dr. Dobb's).

The ['Pimpl] idiom is a simple yet robust technique to minimize coupling via 

* the separation of interface and implementation and then 
* implementation hiding. 

Successfully popularized by Sutter ([link 2 \[2\]], [link 3 \[3\]]) under the cheeky ['Pimpl] name (as for "pointer to implementation") the technique has been known long before under various names (the Cheshire Cat in [link 4 \[4\]], the Handle/Body in [link 5 \[5\]], the Bridge in [link 6 \[6\]] and conceptually deployed in C and C++ as far back as at least early eighties ([link 7 \[7\]]).

In the domain of commercial large-scale software development, where the following design principles come to the fore:

* component-based modular design, 
* separation of concerns ([link 8 \[8\]], [link 9 \[9\]]),
* implementation hiding, 
* minimization of compilation and component dependencies, 
* consistent and recognizable deployment and implementation patterns, 
* multi-platform support,

the ['Pimpl] technique can help great deal achieving those goals. Still, it does not seem to be sufficiently widely deployed. In part that is due to efficiency considerations (valid or misguided) and probably more often due to additional implementation scaffolding and coding overhead associated with the technique. 

This library provides the code and the deployment pattern to bridge that gap, to ease and to standardize the deployment of the idiom.

[endsect]
